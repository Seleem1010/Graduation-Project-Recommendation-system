CREATE TABLE IF NOT EXISTS users (id CHAR(20) PRIMARY KEY NOT NULL, firstname CHAR(255) NOT NULL, lastname CHAR(255) NOT NULL, email CHAR(255) UNIQUE KEY NOT NULL, password CHAR(255) NOT NULL, verified INT NOT NULL, reset_code INT NOT NULL DEFAULT 0, image CHAR(255) NOT NULL DEFAULT "user.png");

CREATE TABLE IF NOT EXISTS places (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, name CHAR(255) NOT NULL, country CHAR(255) NOT NULL, city CHAR(255) NOT NULL, lat FLOAT NOT NULL, lng FLOAT NOT NULL);

CREATE TABLE IF NOT EXISTS images (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, name CHAR(255) NOT NULL, pid INT NOT NULL, FOREIGN KEY (pid) REFERENCES places (id));

CREATE TABLE IF NOT EXISTS visits (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, pid INT NOT NULL, FOREIGN KEY (pid) REFERENCES places (id), uid CHAR(20) NOT NULL, FOREIGN KEY (uid) REFERENCES users (id));

CREATE TABLE IF NOT EXISTS favorites (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, pid INT NOT NULL, FOREIGN KEY (pid) REFERENCES places (id), uid CHAR(20) NOT NULL, FOREIGN KEY (uid) REFERENCES users (id));

CREATE TABLE IF NOT EXISTS plans (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, pid INT NOT NULL, FOREIGN KEY (pid) REFERENCES places (id), uid CHAR(20) NOT NULL, FOREIGN KEY (uid) REFERENCES users (id), date DATETIME NOT NULL);

CREATE TABLE IF NOT EXISTS comments (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, text CHAR(255) NOT NULL, time DATETIME NOT NULL, pid INT NOT NULL, FOREIGN KEY (pid) REFERENCES places (id), uid CHAR(20) NOT NULL, FOREIGN KEY (uid) REFERENCES users (id));

CREATE TABLE IF NOT EXISTS ratings (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, rate INT NOT NULL, pid INT NOT NULL, FOREIGN KEY (pid) REFERENCES places (id), uid CHAR(20) NOT NULL, FOREIGN KEY (uid) REFERENCES users (id));

CREATE TABLE IF NOT EXISTS tags (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, name CHAR(255) NOT NULL);

CREATE TABLE IF NOT EXISTS place_tags (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, pid INT NOT NULL, FOREIGN KEY (pid) REFERENCES places (id));

CREATE TABLE IF NOT EXISTS user_tags (id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, uid CHAR(20) NOT NULL, FOREIGN KEY (uid) REFERENCES users (id));